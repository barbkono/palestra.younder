<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Goodbye</title>
    <meta charset="utf-8" lang="en">
    <style>
      html {
        font-size: 20px;
        font-family: 'lato', sans-serif;
        font-weight: lighter;
        letter-spacing: 0.05rem;
      }

      .goodbye-container {
        text-align: center;
        margin-top: 15rem;
      }

      .bye-message {
        font-size: 1.5rem;
      }

      .exit-text {
        color: #707070;
        margin-top: 1rem;
      }
    </style>
  </head>
  <body>
    <div class="goodbye-container">
      <div class="bye-message">ðŸ‘‹ Bye!</div>
      <div class="exit-text">You may now leave this page.</div>
    </div>
  </body>
</html>

<!DOCTYPE html>
<html lang="en" class="">
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset="utf-8">

    <title>PÃ³s-Work: sua vida e a                           dos outros dependem de vocÃª</title>

    <link type="text/css" rel="stylesheet" href="lib/icomoon.css">
    <script type="text/javascript" src="lib/player-0.0.11.min.js"></script>
    <script type="text/javascript" src="lib/lzwcompress.js"></script>

    <!-- Resize Hack -->
    <script type="text/javascript">
      window.resizeTo(screen.width, screen.height);
    </script>
    

    <script id="__ENTRY__" type="application/json">
      {".js":["rise/a193dd75.js"],".css":["sandbox/4adfab46.css"]}
    </script>

    <script id="__REMOTE_ENTRIES__" type="application/json">
      {"learn_distribution_frontend":{".js":["learn_dist/entry.js"]},"mondrian":{".js":["mondrian/entry.js"]}}
    </script>

    <script>
      (function() {
        const jsonp = {}

        function loadModule(manifest) {
          const p = []

          if (manifest['.css'] != null) {
            for (var idx = 0; idx < manifest['.css'].length; idx++) {
              p.push(new Promise((resolve, reject) => {
                var link = document.createElement('link')
                link.onload = resolve
                link.onerror = reject
                link.rel = 'stylesheet'
                link.href = 'lib/' + manifest['.css'][idx]
                document.body.appendChild(link)
              }))
            }
          }

          if (manifest['.js'] != null) {
            for (var idx = 0; idx < manifest['.js'].length; idx++) {
              p.push(new Promise((resolve, reject) => {
                var script = document.createElement('script')
                script.onload = resolve
                script.onerror = reject
                script.src = 'lib/' + manifest['.js'][idx]
                document.body.appendChild(script)
              }))
            }
          }

          return Promise.all(p)
        }

        function deserialize(str) {
          const buffer = Uint8Array.from(atob(str), c => c.charCodeAt(0))
          const json = new TextDecoder().decode(buffer)
          const result = JSON.parse(json)
          return result
        }

        function __loadEntry() {
          return loadModule(JSON.parse(document.getElementById('__ENTRY__').textContent))
        }

        function __loadRemoteEntry(name) {
          const manifest = JSON.parse(document.getElementById('__REMOTE_ENTRIES__').textContent)
          if (manifest[name] == null) throw new Error(`Missing manifest for remote entry "${name}".`)
          return loadModule(manifest[name])
        }

        async function __fetchCourse() {
          return Promise.resolve(deserialize(""))
        }

        window.__loadEntry = __loadEntry
        window.__loadRemoteEntry = __loadRemoteEntry
        window.__fetchCourse = __fetchCourse
      })()
    </script>
  </head>
  <body>
    <div id="app"></div>
    <script type="text/javascript">
  (function(root) {
    window.partnerContent = [];

    function isExport() {
      return true;
    }

    function resolvePath(path) {
      return ('assets/').concat(path);
    }

    function resolveFontPath(font) {
      return ('lib/fonts/').concat(font.key.split('/').reverse()[0]);
    }

    root.Runtime = {
      fetch: window.__fetchCourse,
      isExport: isExport,
      resolvePath: resolvePath,
      resolveFontPath: resolveFontPath
    };
  }(window));
</script>

    
    <script>__loadEntry()</script>
    
  </body>
</html>
